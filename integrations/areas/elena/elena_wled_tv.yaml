homeassistant:
  customize:
    automation.elena_tv_wled_alarm:
      friendly_name: Спальня WLED - Тревога
      icon: mdi:flash-alert
    automation.elena_tv_wled_warning:
      friendly_name: Спальня WLED - Предупреждение
      icon: mdi:alert-circle
    automation.elena_tv_wled_notification:
      friendly_name: Спальня WLED - Информация
      icon: mdi:calendar-check
    automation.elena_tv_wled_tv_power:
      friendly_name: Спальня WLED - Включен телевизор
      icon: mdi:calendar-check
    automation.elena_tv_wled_motion:
      friendly_name: Спальня WLED - Движение
      icon: mdi:calendar-check

template:
  - binary_sensor:
      - name: elena_tv_power
        state: >
          {%- if states('media_player.elena_tv') not in ['unknown', 'unavailable']-%}
            {{ is_state('media_player.elena_tv', 'on') }}
          {%- else -%}
            false
          {%- endif -%}
        device_class: power
      - name: elena_motion_and_illuminance_available
        state: >
          {{ true if
            has_value('binary_sensor.elena_motion') and
            has_value('sensor.elena_motion_illuminance_illuminance_lux') else false }}
        device_class: connectivity
      - name: elena_motion_low_light
        state: >
          {{
            states('binary_sensor.elena_motion')
            if
              is_state('binary_sensor.elena_motion_and_illuminance_available', 'on') and
              states('sensor.elena_motion_illuminance_illuminance_lux') | int < 20
            else
              false
              if
                is_state('binary_sensor.elena_motion_and_illuminance_available', 'on')
              else
                states('binary_sensor.elena_motion')
                if
                  has_value('binary_sensor.elena_motion')
                else
                  false
          }}
        device_class: motion

mqtt:
  sensor:
    - name: elena_tv_wled_ip_saved
      state_topic: home/wled/elena-tv-wled/ip
      icon: mdi:ip-network

rest_command:
  wled_reset:
    url: "http://{{ ip }}/reset"

script:
  wled_control_test:
    sequence:
      - alias: "test wled"
        action: script.turn_on
        target:
          entity_id: script.wled_control
        data:
          variables:
            wled_target: light.elena_tv_wled
            wled_palette: "* Color 1"
            wled_effect: Blink
            wled_speed: 226
            wled_intensity: 128

  elena_tv_wled_turn_off:
    sequence:
      - alias: "Выключить ленту"
        action: script.wled_turn_off
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_mode_notification:
    sequence:
      - alias: "Включить режим нотификации"
        action: script.wled_set_mode_notification
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_mode_warning:
    sequence:
      - alias: "Включить режим предупреждения"
        action: script.wled_set_mode_warning
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_mode_alarm:
    sequence:
      - alias: "Включить режим тревоги"
        action: script.wled_set_mode_alarm
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_notification:
    sequence:
      - alias: "Включить режим нотификации"
        action: script.run_script_if_state
        data:
          entity_id: binary_sensor.notification
          entity_state: "on"
          entity_id_else: binary_sensor.event
          entity_state_else: "off"
          script_if_true: script.elena_tv_wled_set_mode_notification
          script_if_false: script.elena_tv_wled_turn_off

  elena_tv_wled_set_warning:
    sequence:
      - alias: "Включить режим предупреждения"
        action: script.run_script_if_state
        data:
          entity_id: binary_sensor.warning
          entity_state: "on"
          entity_id_else: binary_sensor.event
          entity_state_else: "off"
          script_if_true: script.elena_tv_wled_set_mode_warning
          script_if_false: script.elena_tv_wled_turn_off

  elena_tv_wled_set_alarm:
    sequence:
      - alias: "Включить режим тревоги"
        action: script.run_script_if_state
        data:
          entity_id: binary_sensor.alarm
          entity_state: "on"
          entity_id_else: binary_sensor.event
          entity_state_else: "off"
          script_if_true: script.elena_tv_wled_set_mode_alarm
          script_if_false: script.elena_tv_wled_turn_off

  elena_tv_wled_set_mode_tv:
    alias: wled_tv
    sequence:
      - alias: "Включить режим просмотра телевизора"
        action: script.wled_control
        data:
          wled_target: light.elena_tv_wled
          wled_color: [248, 204, 48] # yellow
          wled_effect: Solid
          wled_brightness_pct: 80

  elena_tv_wled_set_mode_night_motion:
    alias: Включить жёлтый цвет
    sequence:
      - alias: "Turn on the light and select effect"
        action: script.wled_control
        data:
          wled_target: light.elena_tv_wled
          wled_color: [248, 204, 48] # yellow
          wled_effect: Solid
          wled_brightness_pct: 10

  elena_tv_wled_powercycle:
    alias: Перезагрузить WLED
    sequence:
      - alias: Powercycle WLED
        action: switch.turn_off
        data:
          entity_id: switch.elena_plug_tv_wled
      - delay: 10
      - alias: Turn on WLED
        action: switch.turn_on
        data:
          entity_id: switch.elena_plug_tv_wled

automation:
  # - id: reset_wled_if_unavailable
  #   alias: Перезагрузить WLED если недоступен
  #   description: "Перезагрузить WLED если недоступен"
  #   use_blueprint:
  #     path: yuri-vashchenko/reset_wled_if_unavailable.yaml
  #     input:
  #       wled_entity: light.elena_tv_wled
  #       wled_reset: wled_reset
  #       wled_ip: "{{ states('sensor.elena_tv_wled_ip_saved') }}"
  #       enabling_entity: binary_sensor.main_control

  - id: reset_wled_if_unavailable
    alias: Перезагрузить WLED если недоступен
    description: "Перезагрузить WLED если недоступен"
    trigger:
      - platform: homeassistant
        event: start
      - platform: event
        event_type: automation_reloaded
      - platform: state
        entity_id: light.elena_tv_wled
        to:
          - unavailable
      - platform: time_pattern
        minutes: "/15"
    condition:
      - alias: "Control mode"
        condition: state
        entity_id: binary_sensor.light_control
        state: "on"
      - alias: "WLED unavailable"
        condition: state
        entity_id: light.elena_tv_wled
        state:
          - unavailable
    action:
      - alias: Powercycle WLED
        action: script.elena_tv_wled_powercycle
    mode: single
    max_exceeded: silent

  - id: Elena TV WLED main controller
    alias: Переключить режим WLED если необходимо
    trigger:
      - platform: state
        entity_id: light.elena_tv_wled
        from:
          - "unknown"
          - "unavailable"
      - platform: state
        entity_id: binary_sensor.elena_tv_power
      - platform: state
        entity_id: binary_sensor.elena_motion_low_light
      - platform: homeassistant
        event: start
      - platform: event
        event_type: automation_reloaded
    condition:
      - condition: state
        entity_id: binary_sensor.light_control
        state: "on"
    action:
      - alias: "Включить необходимый режим"
        if:
          - alias: "Нет событий"
            condition: state
            entity_id: binary_sensor.event
            state: "off"
        then:
          choose:
            - conditions:
                - alias: "Телевизор выключен"
                  condition: state
                  entity_id: binary_sensor.elena_tv_power
                  state: "off"
                - alias: "Нет движения ночью"
                  condition: state
                  entity_id: binary_sensor.elena_motion_low_light
                  state: "off"
                - alias: "Лента включена"
                  condition: state
                  entity_id: light.elena_tv_wled
                  state: "on"
              sequence:
                - alias: "Выключить ленту"
                  action: script.elena_tv_wled_turn_off
            - conditions:
                - condition: or
                  conditions:
                    - alias: "Ночник"
                      condition: state
                      entity_id: binary_sensor.elena_motion_low_light
                      state: "on"
                    - alias: "Подсветка телевизора"
                      condition: state
                      entity_id: binary_sensor.elena_tv_power
                      state: "on"
              sequence:
                - if:
                    - alias: "Подсветка телевизора"
                      condition: state
                      entity_id: binary_sensor.elena_tv_power
                      state: "on"
                  then:
                    - alias: "Включить режим подсветки телевизора"
                      action: script.elena_tv_wled_set_mode_tv
                  else:
                    - alias: "Включить режим ночника"
                      action: script.elena_tv_wled_set_mode_night_motion
        else:
          - alias: "Включить режим уведомления если необходимо"
            action: script.elena_tv_wled_set_notification
          - alias: "Включить режим предупреждения если необходимо"
            action: script.elena_tv_wled_set_warning
          - alias: "Включить режим тревоги если необходимо"
            action: script.elena_tv_wled_set_alarm
    mode: parallel

  - id: save_elena_wled_tv_ip
    alias: Когда WLED становится доступным, сохранить его IP адрес
    trigger:
      - platform: state
        entity_id: sensor.elena_tv_wled_ip
        from:
          - unknown
          - unavailable
    condition:
      - alias: "Проверка control"
        condition: state
        entity_id: binary_sensor.main_control
        state: "on"
    action:
      - alias: "Публикация IP адреса MQTT топик"
        action: mqtt.publish
        data:
          topic: "home/wled/elena-tv-wled/ip"
          payload: "{{ states('sensor.elena_tv_wled_ip') }}"
          retain: true
    mode: restart
