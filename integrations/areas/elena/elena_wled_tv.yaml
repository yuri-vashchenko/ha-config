homeassistant:
  customize:
    automation.elena_tv_wled_alarm:
      friendly_name: Спальня WLED - Тревога
      icon: mdi:flash-alert
    automation.elena_tv_wled_warning:
      friendly_name: Спальня WLED - Предупреждение
      icon: mdi:alert-circle
    automation.elena_tv_wled_notification:
      friendly_name: Спальня WLED - Информация
      icon: mdi:calendar-check
    automation.elena_tv_wled_tv_power:
      friendly_name: Спальня WLED - Включен телевизор
      icon: mdi:calendar-check
    automation.elena_tv_wled_motion:
      friendly_name: Спальня WLED - Движение
      icon: mdi:calendar-check

template:
  - binary_sensor:
      - name: elena_tv_power
        state: >
          {%- if states('media_player.elena_tv') not in ['unknown', 'unavailable']-%}
            {{ is_state('media_player.elena_tv', 'on') }}
          {%- else -%}
            false
          {%- endif -%}
        device_class: power
      - name: elena_motion_and_illuminance_available
        state: >
          {{ true if
            has_value('binary_sensor.elena_motion') and
            has_value('sensor.elena_motion_illuminance_illuminance_lux') else false }}
        device_class: connectivity
      - name: elena_motion_low_light
        state: >
          {{
            states('binary_sensor.elena_motion')
            if
              is_state('binary_sensor.elena_motion_and_illuminance_available', 'on') and
              states('sensor.elena_motion_illuminance_illuminance_lux') | int < 20
            else
              false
              if
                is_state('binary_sensor.elena_motion_and_illuminance_available', 'on')
              else
                states('binary_sensor.elena_motion')
                if
                  has_value('binary_sensor.elena_motion')
                else
                  false
          }}
        device_class: motion

mqtt:
  sensor:
    - name: elena_tv_wled_ip_saved
      state_topic: home/wled/elena-tv-wled/ip
      icon: mdi:ip-network

rest_command:
  wled_reset:
    url: "http://{{ ip }}/reset"

script:
  wled_control_test:
    sequence:
      - alias: "test wled"
        service: script.turn_on
        target:
          entity_id: script.wled_control
        data:
          variables:
            wled_target: light.elena_tv_wled
            wled_palette: "* Color 1"
            wled_effect: Blink
            wled_speed: 226
            wled_intensity: 128

  elena_tv_wled_turn_off:
    sequence:
      - alias: "Выключить ленту"
        service: script.wled_turn_off
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_mode_notification:
    sequence:
      - alias: "Включить режим нотификации"
        service: script.wled_set_mode_notification
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_mode_warning:
    sequence:
      - alias: "Включить режим предупреждения"
        service: script.wled_set_mode_warning
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_mode_alarm:
    sequence:
      - alias: "Включить режим тревоги"
        service: script.wled_set_mode_alarm
        data:
          wled_target: light.elena_tv_wled

  elena_tv_wled_set_notification:
    sequence:
      - alias: "Включить режим нотификации"
        service: script.run_script_if_state
        data:
          entity_id: binary_sensor.notification
          entity_state: "on"
          entity_id_else: binary_sensor.event
          entity_state_else: "off"
          script_if_true: script.elena_tv_wled_set_mode_notification
          script_if_false: script.elena_tv_wled_turn_off

  elena_tv_wled_set_warning:
    sequence:
      - alias: "Включить режим предупреждения"
        service: script.run_script_if_state
        data:
          entity_id: binary_sensor.warning
          entity_state: "on"
          entity_id_else: binary_sensor.event
          entity_state_else: "off"
          script_if_true: script.elena_tv_wled_set_mode_warning
          script_if_false: script.elena_tv_wled_turn_off

  elena_tv_wled_set_alarm:
    sequence:
      - alias: "Включить режим тревоги"
        service: script.run_script_if_state
        data:
          entity_id: binary_sensor.alarm
          entity_state: "on"
          entity_id_else: binary_sensor.event
          entity_state_else: "off"
          script_if_true: script.elena_tv_wled_set_mode_alarm
          script_if_false: script.elena_tv_wled_turn_off

  elena_tv_wled_set_mode_tv:
    alias: wled_tv
    sequence:
      - alias: "Включить режим просмотра телевизора"
        service: script.wled_control
        data:
          wled_target: light.elena_tv_wled
          wled_color: [239, 250, 10] # yellow
          wled_effect: Solid
          wled_brightness_pct: 50

  elena_tv_wled_night_motion:
    alias: Включить ночник при обнаружении движения ночью
    sequence:
      - alias: "Turn on the light and select effect"
        service: script.wled_control
        data:
          wled_target: light.elena_tv_wled
          wled_color: [239, 250, 10] # yellow
          wled_effect: Solid
          wled_brightness_pct: 10

automation:
  - id: reset_wled_if_unavailable
    alias: Перезагрузить WLED если недоступен
    description: "Перезагрузить WLED если недоступен"
    use_blueprint:
      path: yuri-vashchenko/reset_wled_if_unavailable.yaml
      input:
        wled_entity: light.elena_tv_wled
        wled_reset: wled_reset
        wled_ip: "{{ states('sensor.elena_tv_wled_ip_saved') }}"
        enabling_entity: binary_sensor.main_control

  - id: Elena TV WLED Alarm
    alias: elena_tv_wled_alarm
    trigger:
      - platform: state
        entity_id: binary_sensor.is_alarm
        from: "off"
        to: "on"
    condition:
      condition: state
      entity_id: binary_sensor.light_control
      state: "on"
    action:
      - alias: "Run alarm script"
        service: script.turn_on
        target:
          entity_id: script.elena_tv_wled_set_mode_alarm
    mode: restart

  - id: Elena TV WLED Warning
    alias: elena_tv_wled_warning
    trigger:
      - platform: state
        entity_id: binary_sensor.is_warning
        from: "off"
        to: "on"
    condition:
      condition: state
      entity_id: binary_sensor.light_control
      state: "on"
    action:
      - alias: "Run warning script"
        service: script.turn_on
        target:
          entity_id: script.elena_tv_wled_set_mode_warning
    mode: restart

  - id: Elena TV WLED Notification
    alias: elena_tv_wled_notification
    trigger:
      - platform: state
        entity_id: binary_sensor.is_notification
        from: "off"
        to: "on"
    condition:
      condition: state
      entity_id: binary_sensor.light_control
      state: "on"
    action:
      - alias: "Run notification script"
        service: script.turn_on
        target:
          entity_id: script.elena_tv_wled_set_mode_notification
    mode: restart

  - id: Elena TV WLED TV power
    alias: elena_tv_wled_tv_power
    trigger:
      - platform: state
        entity_id: binary_sensor.elena_tv_power
        from: "off"
        to: "on"
    condition:
      condition: state
      entity_id: binary_sensor.light_control
      state: "on"
    action:
      - alias: "Run 'tv on' script"
        service: script.turn_on
        target:
          entity_id: script.elena_tv_wled_set_mode_tv
    mode: restart

  - id: Elena TV WLED motion
    alias: elena_tv_wled_motion
    trigger:
      - platform: state
        entity_id: binary_sensor.elena_motion_low_light
        from: "off"
        to: "on"
    condition:
      condition: state
      entity_id: binary_sensor.light_control
      state: "on"
    action:
      - alias: "Run motion script"
        service: script.turn_on
        target:
          entity_id: script.elena_tv_wled_motion
    mode: restart

  - id: Elena TV WLED no motion
    alias: elena_tv_wled_no_motion
    trigger:
      - platform: state
        entity_id: binary_sensor.elena_motion_low_light
        id: "motion"
        from: "on"
        to: "off"
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.light_control
            state: "on"
          - condition: state
            entity_id: binary_sensor.is_alarm
            state: "off"
          - condition: state
            entity_id: binary_sensor.is_warning
            state: "off"
          - condition: state
            entity_id: binary_sensor.is_notification
            state: "off"
          - condition: state
            entity_id: binary_sensor.tv_power
            state: "on"
    action:
      - alias: "No alarm, warning or notification but TV is on"
        service: script.turn_on
        target:
          entity_id: script.elena_tv_wled_set_mode_tv
    mode: restart

  - id: Elena TV WLED Off
    alias: elena_tv_wled_off
    trigger:
      - platform: state
        entity_id: binary_sensor.is_alarm
        id: "alarm"
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.is_warning
        id: "warning"
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.is_notification
        id: "notification"
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.elena_motion_low_light
        id: "motion"
        from: "on"
        to: "off"
      - platform: state
        entity_id: binary_sensor.elena_tv_power
        id: "tv"
        from: "on"
        to: "off"
    condition:
      - condition: and
        conditions:
          - condition: state
            entity_id: binary_sensor.light_control
            state: "on"
          - condition: state
            entity_id: binary_sensor.is_alarm
            state: "off"
          - condition: state
            entity_id: binary_sensor.is_warning
            state: "off"
          - condition: state
            entity_id: binary_sensor.is_notification
            state: "off"
          - condition: state
            entity_id: binary_sensor.tv_power
            state: "off"
          - condition: state
            entity_id: binary_sensor.elena_motion_low_light
            state: "off"
    action:
      - alias: "Turn off the nightlight"
        service: switch.turn_off
        target:
          entity_id: switch.elena_tv_wled_nightlight
      - alias: "Turn off the light"
        service: light.turn_off
        target:
          entity_id: light.elena_tv_wled
    mode: restart

  - id: save_elena_wled_tv_ip
    alias: Когда WLED становится доступным, сохранить его IP адрес
    trigger:
      - platform: state
        entity_id: sensor.elena_tv_wled_ip
        from:
          - unknown
          - unavailable
    condition:
      - alias: "Проверка control"
        condition: state
        entity_id: binary_sensor.main_control
        state: "on"
    action:
      - alias: "Публикация IP адреса MQTT топик"
        service: mqtt.publish
        data:
          topic: "home/wled/elena-tv-wled/ip"
          payload: "{{ states('sensor.elena_tv_wled_ip') }}"
          retain: true
    mode: restart
