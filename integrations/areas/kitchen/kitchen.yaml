# Кухня

homeassistant:
  # customizations
  customize:
    # Розетки и выключатели
    switch.kitchen_power_strip:
      friendly_name: Удлинитель
      icon: mdi:power-plug
    sensor.kitchen_switch_load_power:
      icon: mdi:gauge
      unit: Вт

    # Розетка мультиварки
    switch.kitchen_plug_multipot_power_outage_memory:
      friendly_name: Розетка mainsrv 65 память отключения

    # Розетка телевизора на кухне
    switch.kitchen_plug_tv_power_on_state:
      friendly_name: Розетка телевизора на кухне состояние при подаче питания

    media_player.yandex_station_ff98f02959560d534ab998c1:
      friendly_name: yandex_station_nev11

    media_player.yandex_station_mk0000000000000856020000ea9f455c:
      friendly_name: yandex_station_kitchen

  customize_glob:
    # Сенсоры и датчики

    "*kitchen_motion_window*":
      friendly_name: Кухня движение

    "*kitchen_motion_sink*":
      friendly_name: Кухня движение освещение

    # Розетки и выключатели
    # Розетка мультиварки
    "*kitchen_plug_multipot*":
      friendly_name: Розетка мультиварки

    # Розетка телевизора на кухне
    "*kitchen_plug_tv*":
      friendly_name: Розетка телевизора на кухне

    # Кухонный выключатель
    "*kitchen_switch_light*":
      friendly_name: Кухонный выключатель

# Kitchen power strip - convert power to energy to be able to monitor daily consumption
template:
  - sensor:
      - name: kitchen_switch_load_power
        state: "{{ state_attr('switch.kitchen_power_strip', 'load_power') }}"
      - name: kitchen_total_power
        state: >
          {% set ns = namespace(states=[]) -%}
          {% for plug in expand('group.kitchen_plug') | selectattr('domain','eq','switch') | map(attribute='entity_id') -%}
            {% set energy_sensor_name = plug | replace("switch", "sensor") + "_power" -%}
            {% if is_number(states(energy_sensor_name)) -%}
            {% set plug_energy = states(energy_sensor_name) | float -%}
            {% set ns.states = ns.states + [plug_energy] -%}
            {% endif -%}
          {% endfor -%}
          {{ ns.states | sum | round(2) }}
        state_class: measurement
        unit_of_measurement: "W"
        device_class: power
      - name: kitchen_total_energy
        state: >
          {% set ns = namespace(states=[]) -%}
          {% for plug in expand('group.kitchen_plug') | selectattr('domain','eq','switch') | map(attribute='entity_id') -%}
            {% set energy_sensor_name = plug | replace("switch", "sensor") + "_energy" -%}
            {% if is_number(states(energy_sensor_name)) -%}
            {% set plug_energy = states(energy_sensor_name) | float -%}
            {% set ns.states = ns.states + [plug_energy] -%}
            {% endif -%}
          {% endfor -%}
          {{ ns.states | sum | round(2) }}
        state_class: total_increasing
        unit_of_measurement: "kWh"
        device_class: energy

  - binary_sensor:
      - name: kitchen_ble_presence
        state: >
          {{ is_state('sensor.yuri_location', "kitchen") or
            is_state('sensor.elena_location', "kitchen") }}
        device_class: presence
      - name: kitchen_tv_power
        state: >
          {%- if states('sensor.kitchen_plug_tv_power') not in ['unknown', 'unavailable']-%}
            {{ states('sensor.kitchen_plug_tv_power') | float > 10.0 }}
          {%- else -%}
            false
          {%- endif -%}
        device_class: power

      # Prevents turning on the light
      - name: kitchen_hold_light_off
        state: >
          {{ states('binary_sensor.light_control') == 'off' or
            states('switch.kitchen_hold_light_off') == 'on' }}

      # Prevents turning off the light
      - name: kitchen_hold_light_on
        state: >
          {{ is_state('binary_sensor.light_control', 'off') or
            is_state('switch.kitchen_hold_light_on', 'on') or
            is_state('binary_sensor.kitchen_ble_presence', 'on') }}

sensor:
  - platform: integration
    source: sensor.kitchen_switch_load_power
    name: kitchen_switch_energy
    unit_prefix: k
    round: 2

# switches
mqtt:
  switch:
    # Prevents turning off the light
    - name: kitchen_hold_light_on
      retain: true
      command_topic: "home/kitchen/light/hold_on"
      state_topic: "home/kitchen/light/hold_on"

    # Prevents turning on the light
    - name: kitchen_hold_light_off
      retain: true
      command_topic: "home/kitchen/light/hold_off"
      state_topic: "home/kitchen/light/hold_off"

# lights
light:
  - platform: switch
    name: kitchen_switch_light
    entity_id: switch.kitchen_switch_light

# TV
media_player:
  - platform: smartir
    name: kitchen-tv
    unique_id: kitchen_tv
    device_code: 1061
    controller_data: remote.kitchen_remote_broadlink
    power_sensor: binary_sensor.kitchen_tv_power

automation:
  - id: kitchen_hold_light_on_timer
    alias: kitchen_hold_light_on_timer
    trigger:
      - platform: homeassistant
        event: start
      - platform: event
        event_type:
          - automation_reloaded
      - platform: state
        entity_id: switch.kitchen_hold_light_on
    condition: "{{ states('binary_sensor.light_control') == 'on' }}"
    action:
      - delay:
          minutes: "{{ (states('number.kitchen_hold_light_on_timeout') | int(60)) }}"
      - service: switch.turn_off
        target:
          entity_id: switch.kitchen_hold_light_on
    mode: restart

  - id: kitchen_hold_light_off_timer
    alias: kitchen_hold_light_off_timer
    trigger:
      - platform: homeassistant
        event: start
      - platform: event
        event_type:
          - automation_reloaded
      - platform: state
        entity_id: switch.kitchen_hold_light_off
    condition: "{{ states('binary_sensor.light_control') == 'on' }}"
    action:
      - delay:
          minutes: "{{ (states('number.kitchen_hold_light_off_timeout') | int(60)) }}"
      - service: switch.turn_off
        target:
          entity_id: switch.kitchen_hold_light_off
    mode: restart

  - id: auto_turn_light_in_kitchen_on_motion_when_dark
    alias: kitchen_light
    description: ""
    use_blueprint:
      path: kevinxw/state_based_entity_control.yaml
      input:
        trigger_entity: group.kitchen_motion
        target_entity: light.kitchen_switch_light
        blocker_entity: binary_sensor.kitchen_hold_light_off
        blocker_entity_state: "on"
        timeout_blocker_entity: binary_sensor.kitchen_hold_light_on
        timeout_blocker_entity_state: "on"
        illuminance_sensor: sensor.kitchen_motion_sink_illuminance_lux
        illuminance_below: 14
        sun_elevation_below: 7
        trigger_timeout: 60
        alt_trigger_timeouts: "17:00:00-22:00:00,1200;05:00:00-08:00:00,1200"
