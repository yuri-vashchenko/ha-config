script:
  run_script_if_state:
    alias: "Проверить состояние сущности и запустить соответствующий скрипт"
    mode: queued
    fields:
      entity_id:
        name: Entity to check state
        description: Проверяемая сущность
        selector:
          entity:
      entity_state:
        name: Entity state to check
        description: Проверяемое состояние
        selector:
          text:
      entity_id_else:
        name: Entity to check state if entity_id state is not entity_state (blocker entity)
        description: Проверяемая сущность иначе
        selector:
          entity:
      entity_state_else:
        name: Entity state to check (blocker entity state)
        description: Проверяемое состояние иначе
        selector:
          text:
      script_if_true:
        name: Script to run if entity state matches
        description: Скрипт для запуска если состояние совпало
        selector:
          text:
      data_if_true:
        name: Data to pass to script to run if entity state matches
        description: Данные для скрипта для запуска если состояние совпало
        selector:
          text:
      script_if_false:
        name: Script to run if entity state does not matches
        description: Скрипт для запуска если состояние не совпало
        selector:
          text:
      data_if_false:
        name: Data to pass to script to run if entity state does not matche
        description: Данные для скрипта для запуска если состояние не совпало
        selector:
          text:
    variables:
      state: "{{ entity_state | default(on) }}"
      state_else: "{{ entity_state_else | default(on) }}"
      data_true: "{{ data_if_true | default({}) }}"
      data_false: "{{ data_if_false | default({}) }}"
    sequence:
      - if:
          - "{{ is_state(entity_id, state) }}"
        then:
          - alias: "Запустить скрипт с данными"
            action: "{{ script_if_true }}"
            data: "{{ data_true }}"
        else:
          - if:
              - "{{ is_state(entity_id_else, state_else) }}"
            then:
              - alias: "Запустить скрипт с данными"
                action: "{{ script_if_false }}"
                data: "{{ data_false }}"

  increment_number:
    alias: "Увеличивает число на шаг если новое значение не больше максимального"
    mode: queued
    fields:
      entity_id:
        name: Number to increment
        description: Сущность домена number для увеличения
        selector:
          entity:
            domain: number
    variables:
      min_value: "{{ state_attr(entity_id, 'min') | float(0.0)}}"
      max_value: "{{ state_attr(entity_id, 'max') | float(100.0)}}"
      step: "{{ state_attr(entity_id, 'step') | float(1.0)}}"
      current_value: "{{ states(entity_id) | float(min_value)}}"
      new_value: "{{ min(current_value + step, max_value) }}"
    sequence:
      - alias: "Установить новое значение"
        action: number.set_value
        target:
          entity_id: "{{ entity_id }}"
        data:
          value: "{{ new_value }}"
  decrement_number:
    alias: "Уменьшает число на шаг если новое значение не меньше минимального"
    mode: queued
    fields:
      entity_id:
        name: Number to increment
        description: Сущность домена number для увеличения
        selector:
          entity:
            domain: number
    variables:
      min_value: "{{ state_attr(entity_id, 'min') | float(0.0)}}"
      max_value: "{{ state_attr(entity_id, 'max') | float(100.0)}}"
      step: "{{ state_attr(entity_id, 'step') | float(1.0)}}"
      current_value: "{{ states(entity_id) | float(min_value)}}"
      new_value: "{{ max(current_value - step, min_value) }}"
    sequence:
      - alias: "Установить новое значение"
        action: number.set_value
        target:
          entity_id: "{{ entity_id }}"
        data:
          value: "{{ new_value }}"
