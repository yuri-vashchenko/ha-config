# Record events as MQTT messages

automation:
  - id: Record_events_as_mqtt_messages
    alias: Record_events_as_mqtt_messages
    trigger:
      - platform: state
        entity_id:
          # Water leak detectors
          - binary_sensor.toilet_water_leak_water_leak
          - binary_sensor.bathroom_water_leak_water_leak
          - binary_sensor.kitchen_water_leak_water_leak
          # Motion sensors
          - binary_sensor.corridor_motion_bathroom_occupancy
          - binary_sensor.elena_motion_occupancy
          - binary_sensor.entrance_motion_occupancy
          - binary_sensor.corridor_motion_entrance_occupancy
          - binary_sensor.kitchen_motion_sink_occupancy
          - binary_sensor.kitchen_motion_window_occupancy
          - binary_sensor.mama_motion_occupancy
          - binary_sensor.michael_motion_occupancy
          - binary_sensor.svetlana_motion_occupancy
          # Doors/windows
          - binary_sensor.balcony_window_left_contact
          - binary_sensor.balcony_window_middle_contact
          - binary_sensor.balcony_window_right_contact
          - binary_sensor.elena_door_contact
          - binary_sensor.entrance_door_contact
          - binary_sensor.balcony_door_elena_contact
    condition:
      - "{{ is_state('binary_sensor.main_control', 'on') }}"
    action:
      - alias: Publish event to MQTT topic
        action: mqtt.publish
        data_template:
          topic: >
            {{ 'events/date_time/' + trigger.to_state.object_id + '/' + trigger.to_state.state }}
          payload: "{{ now() }}"
          retain: true
    mode: queued
