# Action to execute on different events
blueprint:
  name: event_action
  description: A script that triggers speakers 'say', xiaomi_gateway play ringtone and RGB LED illumination
  source_url: https://gist.github.com/yuri-vashchenko/
  domain: script
  homeassistant:
    min_version: 2021.11.0
  input:
    event_severity:
      name: Event severity
      description: severity of event
      default: "notification"
      selector:
        select:
          options:
            - notification
            - warning
            - alarm
    event_type:
      name: Event type
      description: type of event
      default:
      selector:
        text:
    event_id:
      name: Event id
      description: id of event
      default:
      selector:
        text:
    announcement_message:
      name: announcement_message_on_event_start
      description: Message to say when event happens
      default:
      selector:
        text:
          multiline: true
    announcement_volume:
      name: Announcement Volume level
      description: Volume level (percent) is an integer from 0 to 100
      selector:
        number:
          min: 0
          max: 100
          step: 1
          mode: slider
      default: 80
    announcement_message_repeat:
      name: announcement_message_to_repeat_until_event_ends
      description: Message to repeat while event is in progress
      default: ""
      selector:
        text:
          multiline: true
    announcement_message_end:
      name: announcement_message_to_say_on_event_end
      description: Message to say when event ended
      default: ""
      selector:
        text:
          multiline: true
    delay_between_repeats:
      name: delay_between_messages_repeat
      description: delay between messages repeat
      default:
        seconds: 60
      selector:
        time:
    max_repeats:
      name: maximum_number_of_repeats
      description: maximum number of repeats
      default: 0
      selector:
        number:
          max: 100
          min: 0
    ringtone_id:
      name: Ringtone ID
      # https://www.home-assistant.io/integrations/xiaomi_aqara/#service-xiaomi_aqaraplay_ringtone
      description: Ringtone id
      default: 10
      selector:
        number:
          min: 0
          max: 100000
          step: 1
          mode: box
    ringtone_volume:
      name: Ringtone Volume level
      description: Volume level is an integer number from 0 to 100
      selector:
        number:
          min: 0
          max: 100
          step: 1
          mode: slider
      default: 100
    gateway_mac:
      name: Xiaomi aqara gateway MAC
      description: Xiaomi aqara gateway MAC address to play ringtone on
      selector:
        text:
      default: "50EC50C4F23D"
    wait_entity:
      name: Clear event Entity ID
      description: Entity to wait for state change to clear event
      selector:
        entity:
    wait_entity_state:
      name: Clear event entity state
      description: Entity state to wait for state change to clear event
      selector:
        text:
mode: parallel
variables:
  event_severity: !input 'event_severity'
  _event_type: !input 'event_type'
  event_type: "{{ _event_type or '' | lower | trim }}"
  event_id: !input 'event_id'
  _announcement_message: !input 'announcement_message'
  _am: "{{ _announcement_message or '' }}"
  announcement_message: >-
    {% if _am == '' %}
      {% if event_type == "notification" %}
        Уведомление
      {% elif _event_type == "warning" %}
        Внимание!
      {% elif _event_type == "alarm" %}
        Тревога!
      {% endif %}
    {% else %}
      {{ _am }}
    {% endif %}
  announcement_volume: !input 'announcement_volume'
  _announcement_message_repeat: !input 'announcement_message_repeat'
  announcement_message_repeat: >-
    {{ _announcement_message_repeat or "Повторяю! " + announcement_message }}
  _announcement_message_end: !input 'announcement_message_end'
  announcement_message_end: "{{ _announcement_message_end or '' }}"
  ringtone_id: !input 'ringtone_id'
  ringtone_volume: !input 'ringtone_volume'
  gateway_mac: !input 'gateway_mac'
  max_repeats: !input 'max_repeats'
  wait_entity: !input 'wait_entity'
  _wait_entity_state: !input 'wait_entity_state'
  wait_entity_state: "{{ _wait_entity_state or '' }}"
  play_ringtone_payload: >
    {"mac": "{{ gateway_mac }}",
      "ringtone": "{{ ringtone_id }}",
      "volume": "{{ ringtone_volume }}"}
  announcement_payload: >
    {"message": "{{ announcement_message }}",
      "volume": "{{ announcement_volume }}"}
  announcement_payload_repeat: >
    {"message": "{{ announcement_message_repeat }}",
      "volume": "{{ announcement_volume }}"}
  announcement_payload_end: >
    {"message": "{{ announcement_message_end }}",
      "volume": "{{ announcement_volume }}"}
  number_entity_name: number.{{ event_severity }}s
sequence:
  - alias: запись момента конкретного события
    service: mqtt.publish
    data:
      topic: >
        events/date_time/{{ event_severity }}/{{ event_type }}/{{ event_id }}
      payload: "{{ now() }}"
      retain: true
  - alias: запись момента события
    service: mqtt.publish
    data:
      topic: >
        events/date_time/{{ event_severity }}/{{ event_type }}
      payload: "{{ now() }}"
      retain: true
  - alias: публикация сообщения для проигрывания рингтона
    service: mqtt.publish
    data:
      topic: "home/system/notification/xiaomi/play_ringtone"
      payload: "{{play_ringtone_payload}}"
  - alias: публикация голосового оповещения
    service: mqtt.publish
    data:
      topic: "home/system/announcement/all"
      payload: "{{announcement_payload}}"
  - alias: увеличение счётчика событий
    service: script.increment_number
    data:
      entity_id: "{{ number_entity_name }}"
  - alias: ожидание завершения события
    repeat:
      while: >
        {{ not(is_state(wait_entity, wait_entity_state)) and
          (max_repeats == 0 or repeat.index <= max_repeats) }}
      sequence:
        - alias: публикация команды для воспроизведения рингтона повторения
          service: mqtt.publish
          data:
            topic: "home/system/notification/xiaomi/play_ringtone"
            payload: "{{play_ringtone_payload}}"
        - alias: публикация команды для повторного голосового сообщения
          service: mqtt.publish
          data:
            topic: "home/system/announcement/all"
            payload: "{{ announcement_payload_repeat }}"
        - alias: ожидание
          wait_template: >
            {{ is_state(wait_entity, wait_entity_state) }}
          timeout:
            seconds: !input 'delay_between_repeats'
  - alias: уменьшение счётчика событий
    service: script.decrement_number
    data:
      entity_id: "{{ number_entity_name }}"
  - condition: template
    value_template: "{{ announcement_message_end != '' }}"
  - alias: публикация голосового сообщения об окончании события
    service: mqtt.publish
    data:
      topic: "home/system/announcement/all"
      payload: "{{ announcement_payload_end }}"
